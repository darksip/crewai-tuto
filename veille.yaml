# Configuration du syst√®me de veille CrewAI (Version Simple)

# Topics √† surveiller
topics:
  - name: "Intelligence Artificielle"
    keywords: ["IA g√©n√©rative", "LLM", "ChatGPT", "Claude", "Gemini"]
    youtube_channels:
      - "Underscore_"
      - "Machine Learnia"
      - "Micode"
    volume: 8
    
  - name: "Crypto Finance"
    keywords: ["Bitcoin", "Ethereum", "DeFi", "blockchain"]
    youtube_channels:
      - "Hasheur"
      - "Captain Altcoin"
      - "Crypto Matrix"
    volume: 6
    
  - name: "Tech Startups"
    keywords: ["startup fran√ßaise", "financement", "lev√©e de fonds", "licorne"]
    youtube_channels:
      - "The Family"
      - "Station F"
      - "French Tech"
    volume: 5

# Configuration des agents
agents:
  researcher:
    role: "Chercheur Web Senior"
    goal: "Trouver les actualit√©s et vid√©os les plus r√©centes et pertinentes sur le sujet donn√©"
    backstory: >
      Tu es un expert en recherche d'information avec 10 ans d'exp√©rience. 
      Tu sais identifier les sources fiables et filtrer l'information pertinente.
      Tu te concentres sur les contenus r√©cents (derni√®res 24h) et de qualit√©.
  
  synthesizer:
    role: "R√©dacteur de Synth√®ses"
    goal: "Cr√©er des synth√®ses claires, structur√©es et actionnables"
    backstory: >
      Tu es un journaliste tech exp√©riment√© sp√©cialis√© dans la r√©daction de synth√®ses.
      Tu excelles dans l'analyse et la mise en perspective des informations.
      Tu cr√©√©s des contenus clairs, bien structur√©s et utiles pour les d√©cideurs.

# Configuration des t√¢ches
tasks:
  search_news:
    description: >
      Recherche les actualit√©s les plus r√©centes (derni√®res 24h) sur le topic "{topic_name}".
      Utilise les mots-cl√©s : {keywords}
      Trouve {volume} articles pertinents et r√©cents.
      Concentre-toi sur les sources fiables et l'information de qualit√©.
    agent: researcher
    expected_output: >
      Une liste d'articles avec :
      - Titre
      - Source  
      - URL
      - R√©sum√© en 2-3 phrases
      - Date de publication
    
  search_videos:
    description: >
      Recherche les vid√©os YouTube les plus r√©centes (derni√®res 24h) sur le topic "{topic_name}".
      
      STRAT√âGIE DE RECHERCHE :
      Pour chaque cha√Æne autoris√©e ({youtube_channels}), effectue une recherche Google avec :
      - site:youtube.com "Nom de la cha√Æne" {keywords}
      
      Exemple de requ√™tes :
      - site:youtube.com "Underscore_" {keywords}
      - site:youtube.com "Machine Learnia" {keywords}
      
      Filtre par date : derni√®res 24h
      Trouve {volume} vid√©os pertinentes au total.
    agent: researcher
    expected_output: >
      Une liste de vid√©os YouTube avec :
      - Titre complet
      - Nom de la cha√Æne
      - URL compl√®te de la vid√©o
      - Date de publication
      - Description/extrait
  
  synthesize:
    description: >
      Cr√©e une synth√®se quotidienne compl√®te sur "{topic_name}" √† partir des articles et vid√©os trouv√©s.
      
      Structure attendue :
      # Synth√®se {topic_name} - {date}
      
      ## üìä R√©sum√©
      Vue d'ensemble en 2-3 phrases des points cl√©s du jour.
      
      ## üì∞ Actualit√©s Principales  
      Top 3-5 articles avec analyse et liens.
      
      ## üé• Vid√©os Int√©ressantes
      Top 3-4 vid√©os avec points cl√©s.
      
      ## üí° Insights & Tendances
      Analyse des patterns et tendances observ√©s.
      
      ## üîÆ √Ä Surveiller
      Points d'attention pour les prochains jours.
    agent: synthesizer
    expected_output: >
      Une synth√®se en format Markdown, claire et structur√©e,
      pr√™te √† √™tre sauvegard√©e et partag√©e.

# Param√®tres g√©n√©raux
settings:
  language: "fr"
  max_results_per_search: 10
  output_format: "markdown"
  
  # R√©pertoires
  output_dir: "syntheses"
  logs_dir: "logs"
  
  # Planification (pour usage futur avec cron)
  schedule: "0 6 * * *"  # Tous les jours √† 6h00
  
  # API Keys (utilise Doppler ou variables d'environnement)
  api_keys:
    serper: "${SERP_API_KEY}"  # Serper pour recherche Google + YouTube
    openai: "${OPENAI_API_KEY}"  # OpenAI pour les agents CrewAI